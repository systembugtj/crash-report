目前主要有以下几个重构的计划：
1，使用glogging, gfalgs, gtest等实现Log和单元测试。
2，全部丢弃匈牙利命名法，重新为重要的结构体取名。
3，全部使用C++的stirng而不是使用C语言的char* ,wchar*
4，精简代码，使用一个helper class就可以搞定。
5，重构有关UI方面的代码，丢弃WTL
6，重构有关sender方面的代码，使用curl进行发送，这样可以方便地支持多协议进行发送。


考虑增强的部分：
1.崩溃报告的处理部分，看看能够增加自动化处理能力。
2.在启动的时候，进行一次Healthy check，如果软件达到一定的崩溃频率，
则强制要求升级或者是要求回退到之前的稳定版本。
3.考虑增强在main函数启动之前的崩溃情况。


//   3-11日，阅读crashRptProbe相关文档和代码，使用glog和gflgs重构，
尤其是重构有关crprober的main函数，去除解析命令行参数的一堆代码。
并且考虑封装相关函数。

重构sender相关代码，使用Http协议进行发送，发送过程使用同步发送。
另外http协议使用curl进行发送。

03-11-14:16
1,目前已经完成对crprober的重构，并支持了html格式的输出。
2,删除了对命令行解析的冗长代码，使用google的gflags重构。
3,重构了有关Coutputer的类，并设计为一个抽象类和两个具体类，方便之后扩展，支持更多的格式。
4,重构了output_document的代码，设计为一个类，并将各个section的代码独立为一个函数，
	这样之后如果要导出更多的section信息，可以更为灵活地扩充。
	
03-12
1,CrashRptTest部分重构完毕。
2,crashcon部分重构完毕。
3，实现了比较友好的html format导出类。
